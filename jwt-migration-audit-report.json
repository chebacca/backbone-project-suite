{
  "fileCount": 1765,
  "issueCount": 755,
  "results": [
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/BrowseProjectsModal.tsx",
      "issues": [
        {
          "line": 108,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 256,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 456,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 263,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 463,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 108,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/CreateProjectForm.tsx",
      "issues": [
        {
          "line": 43,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 53,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/NetworkProjectSelector.tsx",
      "issues": [
        {
          "line": 129,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 136,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/ProjectBrowser.tsx",
      "issues": [
        {
          "line": 87,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 430,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 442,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 536,
          "content": "const testToken = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 770,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 792,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 596,
          "content": "localStorage.setItem('jwt_token', data.token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 90,
          "content": "sessionStorage.getItem('jwt_token') ||",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 87,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 430,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 442,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 536,
          "content": "const testToken = localStorage.getItem('jwt_token') ||",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 770,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 792,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/WebOnlyStartupFlow.tsx",
      "issues": [
        {
          "line": 770,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 996,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1081,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2342,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1640,
          "content": "localStorage.setItem('jwt_token', idToken);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 2396,
          "content": "localStorage.setItem('jwt_token', idToken);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/automation/NetworkProjectTest.tsx",
      "issues": [
        {
          "line": 119,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 148,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 191,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 119,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 148,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 191,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/project-roles/ProjectRoleManagementDialog.tsx",
      "issues": [
        {
          "line": 268,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 317,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 369,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 70,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "import { jwtService } from '../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 70,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "from '../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 268,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 317,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 369,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 268,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 317,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 369,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/sessions/ManualWrapButton.tsx",
      "issues": [
        {
          "line": 61,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 23,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 23,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 61,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 61,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/sessions/StartProductionButton.tsx",
      "issues": [
        {
          "line": 69,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 24,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "import { jwtService } from '../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 24,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "from '../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 69,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 69,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/components/team-role-wizard/TeamRoleManagementWizard.tsx",
      "issues": [
        {
          "line": 182,
          "content": "const token = await jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 276,
          "content": "const token = await jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 849,
          "content": "const token = await jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 943,
          "content": "const token = await jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 77,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "import { jwtService } from '../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 744,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "import { jwtService } from '../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 77,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "from '../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 744,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "from '../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 182,
          "content": "const token = await jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 276,
          "content": "const token = await jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 849,
          "content": "const token = await jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 943,
          "content": "const token = await jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 182,
          "content": "const token = await jwtService.getToken();",
          "match": "token = await jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 276,
          "content": "const token = await jwtService.getToken();",
          "match": "token = await jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 849,
          "content": "const token = await jwtService.getToken();",
          "match": "token = await jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 943,
          "content": "const token = await jwtService.getToken();",
          "match": "token = await jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/contexts/OnboardingContext.tsx",
      "issues": [
        {
          "line": 63,
          "content": "const isAuthenticated = jwtService.isAuthenticated();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 97,
          "content": "const isAuthenticated = jwtService.isAuthenticated();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 112,
          "content": "const isAuth = jwtService.isAuthenticated();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "import jwtService from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/contexts/UnifiedCallSheetContext.tsx",
      "issues": [
        {
          "line": 1277,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1277,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/contexts/UnifiedSessionContext.tsx",
      "issues": [
        {
          "line": 2283,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2283,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/contexts/UnifiedTimecardContext.tsx",
      "issues": [
        {
          "line": 1197,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1233,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1274,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1356,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1277,
          "content": "sessionStorage.getItem('jwt_token') ||",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1359,
          "content": "sessionStorage.getItem('jwt_token') ||",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1197,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1233,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1274,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1356,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/debug/chatCreationTest.js",
      "issues": [
        {
          "line": 7,
          "content": "const token = AuthService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/auth/hooks/useUserRole.ts",
      "issues": [
        {
          "line": 35,
          "content": "const isAuth = jwtService.isAuthenticated();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 43,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "import jwtService from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 43,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 43,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/ai-chat/UnifiedAIChatContext.tsx",
      "issues": [
        {
          "line": 2343,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/user-messaging/MessagingContext.tsx",
      "issues": [
        {
          "line": 309,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 572,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/user-messaging/api/sessionChatIntegration.ts",
      "issues": [
        {
          "line": 218,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 249,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 285,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 339,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 407,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 218,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 249,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 285,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 339,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 407,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/user-messaging/api.ts",
      "issues": [
        {
          "line": 30,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/user-messaging/services/DiagnosticsHelper.ts",
      "issues": [
        {
          "line": 85,
          "content": "!!localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/user-messaging/services/TurnService.ts",
      "issues": [
        {
          "line": 206,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/chat/user-messaging/services/attachmentService.ts",
      "issues": [
        {
          "line": 80,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 80,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/Layout/NewLayout.tsx",
      "issues": [
        {
          "line": 605,
          "content": "setIsAuthenticated(jwtService.isAuthenticated());",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 71,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "import jwtService from '../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 71,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "from '../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/Scheduler/SchedulerAgentPanel.tsx",
      "issues": [
        {
          "line": 11,
          "content": "setIsAuthenticated(jwtService.isAuthenticated());",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 4,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "import jwtService from '../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 4,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "from '../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/Scheduler/SchedulerPage.tsx",
      "issues": [
        {
          "line": 25,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "import jwtService from '../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 25,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "from '../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/ServerManagement/ServerManagement.tsx",
      "issues": [
        {
          "line": 92,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 23,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "import jwtService from '../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 23,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "from '../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 92,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 200,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 92,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 92,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/admin/components/EnhancedUserDialog.tsx",
      "issues": [
        {
          "line": 215,
          "content": "const token = localStorage.getItem('authToken') || localStorage.getItem('token') || localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 215,
          "content": "const token = localStorage.getItem('authToken') || localStorage.getItem('token') || localStorage.getItem('jwt_token');",
          "match": "token = localStorage.getItem('authToken') || localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/dashboard/overviewcomponents/MessagesOverview.tsx",
      "issues": [
        {
          "line": 68,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/dashboard/overviewcomponents/PortfolioOverview.tsx",
      "issues": [
        {
          "line": 310,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 16,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 16,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 310,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 310,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/components/projects/RoleManagementDialog.tsx",
      "issues": [
        {
          "line": 152,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 182,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 215,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 257,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 43,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "import { jwtService } from '../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 43,
          "content": "import { jwtService } from '../../services/jwtService';",
          "match": "from '../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 152,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 182,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 215,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 257,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 152,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 182,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 215,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 257,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/hooks/auth/index.ts",
      "issues": [
        {
          "line": 143,
          "content": "const isAuth = jwtService.isAuthenticated();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 191,
          "content": "jwtService.clearToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "import jwtService from '../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import jwtService from '../../../../services/jwtService';",
          "match": "from '../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 191,
          "content": "jwtService.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/client/pages/Notes.tsx",
      "issues": [
        {
          "line": 545,
          "content": "const serviceToken = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 74,
          "content": "import { jwtService } from '../../../services/jwtService';",
          "match": "import { jwtService } from '../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 74,
          "content": "import { jwtService } from '../../../services/jwtService';",
          "match": "from '../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 545,
          "content": "const serviceToken = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 545,
          "content": "const serviceToken = jwtService.getToken();",
          "match": "Token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/command-center/hooks/useCommandCenterData.ts",
      "issues": [
        {
          "line": 254,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 283,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 356,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 392,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 435,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 441,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 473,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 479,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 485,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 11,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 11,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 254,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 283,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 356,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 392,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 435,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 441,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 473,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 479,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 485,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 254,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 283,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 356,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 392,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 435,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 441,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 473,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 479,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 485,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 254,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 283,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 356,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 392,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 435,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 441,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 473,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 479,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 485,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/command-center/services/commandCenterService.ts",
      "issues": [
        {
          "line": 22,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 2,
          "content": "import { jwtService } from '../../../services/jwtService';",
          "match": "import { jwtService } from '../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 2,
          "content": "import { jwtService } from '../../../services/jwtService';",
          "match": "from '../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 22,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 22,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/init/websocket-init.ts",
      "issues": [
        {
          "line": 109,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 383,
          "content": "if (authService.getToken()) {",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 392,
          "content": "if (!isWebSocketInitialized() && authService.getToken()) {",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/CSVImportDialog.tsx",
      "issues": [
        {
          "line": 96,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/CreateCalendarEventDialog.tsx",
      "issues": [
        {
          "line": 39,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 39,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/SessionHub/forms/TaskManagement.tsx",
      "issues": [
        {
          "line": 68,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 68,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 68,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/dialogs/EditSessionDialog.tsx",
      "issues": [
        {
          "line": 49,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 49,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/dialogs/UnifiedSessionCreationDialog.tsx",
      "issues": [
        {
          "line": 41,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 41,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/overview/SessionsOverview.tsx",
      "issues": [
        {
          "line": 110,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 211,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 15,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 15,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 110,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 211,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 110,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 211,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/post-production/components/EnhancedMediaLibraryPanel.tsx",
      "issues": [
        {
          "line": 83,
          "content": "import { getToken } from '../../../../../services/jwtService';",
          "match": "import { getToken } from '../../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 83,
          "content": "import { getToken } from '../../../../../services/jwtService';",
          "match": "from '../../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/post-production3/PostProductionTaskManager.tsx",
      "issues": [
        {
          "line": 53,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "import { jwtService } from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 53,
          "content": "import { jwtService } from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/review/EditReviewDialog.tsx",
      "issues": [
        {
          "line": 275,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/unified-workflow/UnifiedStepDocumentationDialog.tsx",
      "issues": [
        {
          "line": 291,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/unified-workflow/UnifiedWorkflowManager.tsx",
      "issues": [
        {
          "line": 997,
          "content": "const user = jwtService.getUserFromToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 274,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/unified-workflow/displays/UnifiedTaskList.tsx",
      "issues": [
        {
          "line": 314,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 317,
          "content": "const decoded = jwtService.getUserFromToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 760,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1192,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1329,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 99,
          "content": "import { jwtService } from '../../../../../services/jwtService';",
          "match": "import { jwtService } from '../../../../../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 99,
          "content": "import { jwtService } from '../../../../../services/jwtService';",
          "match": "from '../../../../../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 314,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 760,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1192,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1329,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 760,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 1192,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 760,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 1192,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`,",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 314,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1329,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/features/sessions/components/workflow/WorkflowNodeUnifiedDialog.tsx",
      "issues": [
        {
          "line": 318,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/hooks/useDemoMode.tsx",
      "issues": [
        {
          "line": 66,
          "content": "const unsubscribeToken = jwtService.onTokenChange(() => {",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import { jwtService } from '../services/jwtService';",
          "match": "import { jwtService } from '../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from '../services/jwtService';",
          "match": "from '../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 56,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 67,
          "content": "const newToken = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 56,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 66,
          "content": "const unsubscribeToken = jwtService.onTokenChange(() => {",
          "match": "Token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 67,
          "content": "const newToken = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "Token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/hooks/useHierarchicalRolePermissions.ts",
      "issues": [
        {
          "line": 22,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 5,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "import jwtService from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 5,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 22,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 22,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/hooks/useTeamData.ts",
      "issues": [
        {
          "line": 38,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 38,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 38,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/lib/notifications/AuthContextAwarenessTester.ts",
      "issues": [
        {
          "line": 149,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 197,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 396,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/lib/notifications/CoreNotificationService.ts",
      "issues": [
        {
          "line": 265,
          "content": "{ name: 'authService.getToken()', value: 'async method - check separately' },",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 504,
          "content": "const token = await authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 585,
          "content": "const token = await authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2724,
          "content": "async () => await authService.getToken(),",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2968,
          "content": "async () => await authService.getToken(),",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 3043,
          "content": "async () => await authService.getToken(),",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 3103,
          "content": "const token = await authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 3143,
          "content": "const token = await authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 3183,
          "content": "const token = await authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 267,
          "content": "{ name: 'localStorage.jwt_token', value: localStorage.getItem('jwt_token') },",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2726,
          "content": "() => localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2970,
          "content": "() => localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 3045,
          "content": "() => localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 270,
          "content": "{ name: 'sessionStorage.jwt_token', value: sessionStorage.getItem('jwt_token') },",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2729,
          "content": "() => sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 2973,
          "content": "() => sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 3048,
          "content": "() => sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/overrides/authOverrides.ts",
      "issues": [
        {
          "line": 22,
          "content": "import { authService, teamMemberAuthService, jwtService } from '../services/authServiceCompatibility';",
          "match": "import { authService, teamMemberAuthService, jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/pages/CreateProjectPage.tsx",
      "issues": [
        {
          "line": 59,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 65,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/pages/DepartmentDebugPage.tsx",
      "issues": [
        {
          "line": 18,
          "content": "localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/AuthTokenSynchronizer.ts",
      "issues": [
        {
          "line": 228,
          "content": "(window as any).jwtService.updateToken?.(this.tokenState.jwtToken);",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 160,
          "content": "const jwtToken = localStorage.getItem('jwt_token') || localStorage.getItem('token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 196,
          "content": "localStorage.setItem('jwt_token', this.tokenState.jwtToken);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 172,
          "content": "const payload = JSON.parse(atob(jwtToken.split('.')[1]));",
          "match": "atob(jwt",
          "description": "Manual JWT token parsing",
          "severity": "LOW",
          "replacement": "Use Firebase Auth user properties"
        },
        {
          "line": 160,
          "content": "const jwtToken = localStorage.getItem('jwt_token') || localStorage.getItem('token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 166,
          "content": "if (jwtToken) this.tokenState.jwtToken = jwtToken;",
          "match": "Token) this.tokenState.jwtToken = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/EnhancedTokenPersistenceService.ts",
      "issues": [
        {
          "line": 164,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 300,
          "content": "const currentToken = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/FirebaseMessagingService.ts",
      "issues": [
        {
          "line": 149,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 149,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token') || localStorage.getItem('auth_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/FirestoreApiAdapter.ts",
      "issues": [
        {
          "line": 545,
          "content": "const token = jwtService.generateToken({",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 1,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 105,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 105,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 545,
          "content": "const token = jwtService.generateToken({",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/ProjectBridgeService.ts",
      "issues": [
        {
          "line": 147,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 182,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 230,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 268,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 324,
          "content": "jwtService.setToken(authData.token);",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 147,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 182,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 230,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 268,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 324,
          "content": "jwtService.setToken(authData.token);",
          "match": ".setToken(",
          "description": "setToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles tokens automatically"
        },
        {
          "line": 147,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 182,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 230,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 268,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/ProjectManager.ts",
      "issues": [
        {
          "line": 675,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 675,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/ServiceReadinessChecker.ts",
      "issues": [
        {
          "line": 208,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/SimpleAuthService.ts",
      "issues": [
        {
          "line": 103,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 88,
          "content": "return localStorage.getItem('auth_token') || localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 55,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 76,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/TokenSynchronizationService.ts",
      "issues": [
        {
          "line": 106,
          "content": "(window as any).jwtService.setToken(bestToken);",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 233,
          "content": "(window as any).jwtService.clearToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 106,
          "content": "(window as any).jwtService.setToken(bestToken);",
          "match": ".setToken(",
          "description": "setToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles tokens automatically"
        },
        {
          "line": 233,
          "content": "(window as any).jwtService.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 22,
          "content": "private readonly TOKEN_KEYS = ['jwt_token', 'auth_token', 'token'];",
          "match": "TOKEN_KEYS = ['jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/UnifiedApiClient.ts",
      "issues": [
        {
          "line": 94,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 114,
          "content": "await jwtService.logout();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 466,
          "content": "jwtService.setToken(result.token);",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 475,
          "content": "await jwtService.logout();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 94,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 466,
          "content": "jwtService.setToken(result.token);",
          "match": ".setToken(",
          "description": "setToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles tokens automatically"
        },
        {
          "line": 94,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/UnifiedFirebaseAuth.ts",
      "issues": [
        {
          "line": 243,
          "content": "localStorage.setItem('jwt_token', idToken);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 315,
          "content": "localStorage.setItem('jwt_token', idToken);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 290,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/UnifiedTokenPersistenceService.ts",
      "issues": [
        {
          "line": 149,
          "content": "return this.activeService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 171,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 306,
          "content": "export const getToken = () => unifiedTokenPersistence.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 193,
          "content": "await this.activeService.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 308,
          "content": "export const clearToken = () => unifiedTokenPersistence.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/UnifiedWorkflowGovernanceService.ts",
      "issues": [
        {
          "line": 166,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 16,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 16,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 166,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 166,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/WebOnlyStartupService.ts",
      "issues": [
        {
          "line": 112,
          "content": "jwtService.init();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 206,
          "content": "if (!jwtService.isInitialized) {",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 207,
          "content": "jwtService.init();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 154,
          "content": "const tokenKeys = ['jwt_token', 'auth_token', 'token'];",
          "match": "tokenKeys = ['jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/WebSocketCoordinator.ts",
      "issues": [
        {
          "line": 193,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/adminApi.ts",
      "issues": [
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/agentFunctionRegistry.ts",
      "issues": [
        {
          "line": 91,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 11,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 11,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 91,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 91,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/aiAgentService.ts",
      "issues": [
        {
          "line": 653,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 12,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 12,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 653,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 653,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/api/globalApiClient.ts",
      "issues": [
        {
          "line": 506,
          "content": "() => localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 509,
          "content": "() => sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/apiErrorHandler.ts",
      "issues": [
        {
          "line": 173,
          "content": "jwtService.logout();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/apiService.ts",
      "issues": [
        {
          "line": 285,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 355,
          "content": "await jwtService.clearToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 790,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 4,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 4,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 285,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 790,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 355,
          "content": "await jwtService.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 251,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 285,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 790,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/applicationModeService.ts",
      "issues": [
        {
          "line": 187,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 261,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 261,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 261,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 187,
          "content": "const token = localStorage.getItem('token') || localStorage.getItem('jwt_token');",
          "match": "token = localStorage.getItem('token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/authBridge.ts",
      "issues": [
        {
          "line": 24,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/authIntegrationService.ts",
      "issues": [
        {
          "line": 52,
          "content": "const baseUser = jwtService.getUserFromToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 59,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 6,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 6,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 59,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 59,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/authServiceCompatibility.ts",
      "issues": [
        {
          "line": 147,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 139,
          "content": "localStorage.setItem('jwt_token', token);",
          "match": "localStorage.setItem('jwt_token'",
          "description": "Direct localStorage JWT token setting",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles token storage automatically"
        },
        {
          "line": 151,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/base/BaseClientService.ts",
      "issues": [
        {
          "line": 35,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/centralizedAuthManager.ts",
      "issues": [
        {
          "line": 140,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 101,
          "content": "import('@/services/jwtService')",
          "match": "import('@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 142,
          "content": "console.warn('⚠️ [CentralizedAuth] Could not get token from jwtService:', error);",
          "match": "from jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 140,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 140,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/combinedSessionsApi.ts",
      "issues": [
        {
          "line": 17,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 17,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 119,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 232,
          "content": "const jwt = localStorage.getItem('jwt_token') || localStorage.getItem('token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 322,
          "content": "jwtToken: !!localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1681,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1750,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 235,
          "content": "userId = JSON.parse(atob(jwt.split('.')[1]))?.id || null;",
          "match": "atob(jwt",
          "description": "Manual JWT token parsing",
          "severity": "LOW",
          "replacement": "Use Firebase Auth user properties"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/consolidatedAssignmentService.ts",
      "issues": [
        {
          "line": 49,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 49,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 49,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/dataSyncService.ts",
      "issues": [
        {
          "line": 177,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/demoService.ts",
      "issues": [
        {
          "line": 226,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 260,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 290,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 226,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 260,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 290,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 226,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 260,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 290,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/enhancedIntegrationManager.ts",
      "issues": [
        {
          "line": 149,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/enhancedScoreboardService.ts",
      "issues": [
        {
          "line": 58,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/globalSearchService.ts",
      "issues": [
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/inventoryService.ts",
      "issues": [
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/jwtService.ts",
      "issues": [
        {
          "line": 256,
          "content": "if (typeof window !== 'undefined' && (window as any).jwtService && (window as any).jwtService.isLoggingOut) {",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1108,
          "content": "logout: async () => await jwtService.logout()",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 673,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 744,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 811,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 878,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1068,
          "content": "const token = this.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 904,
          "content": "this.setToken(data.token);",
          "match": ".setToken(",
          "description": "setToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles tokens automatically"
        },
        {
          "line": 923,
          "content": "await this.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 262,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1074,
          "content": "jwt_token: localStorage.getItem('jwt_token') ? 'exists' : 'missing',",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 293,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 948,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 265,
          "content": "sessionStorage.getItem('jwt_token') ||",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 168,
          "content": "export const JWT_TOKEN_KEY = 'jwt_token'; // Additional key used in the app",
          "match": "TOKEN_KEY = 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 262,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 429,
          "content": "private tokenKey = 'jwt_token';",
          "match": "tokenKey = 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/logoutService.ts",
      "issues": [
        {
          "line": 79,
          "content": "await jwtService.clearToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 7,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 7,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 79,
          "content": "await jwtService.clearToken();",
          "match": ".clearToken(",
          "description": "clearToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        },
        {
          "line": 61,
          "content": "localStorage.removeItem('jwt_token');",
          "match": "localStorage.removeItem('jwt_token')",
          "description": "Direct localStorage JWT token removal",
          "severity": "LOW",
          "replacement": "Use unifiedFirebaseAuth.logout()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/portfolioService.ts",
      "issues": [
        {
          "line": 14,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 69,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 7,
          "content": "import jwtService from './jwtService';",
          "match": "import jwtService from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 7,
          "content": "import jwtService from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 14,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 69,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 14,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 69,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/postProductionApi.ts",
      "issues": [
        {
          "line": 181,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/productionApi.ts",
      "issues": [
        {
          "line": 188,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 12,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 12,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 188,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 188,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/projectContextService.ts",
      "issues": [
        {
          "line": 225,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 258,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 228,
          "content": "const payload = JSON.parse(atob(jwtToken.split('.')[1]));",
          "match": "atob(jwt",
          "description": "Manual JWT token parsing",
          "severity": "LOW",
          "replacement": "Use Firebase Auth user properties"
        },
        {
          "line": 261,
          "content": "const payload = JSON.parse(atob(jwtToken.split('.')[1]));",
          "match": "atob(jwt",
          "description": "Manual JWT token parsing",
          "severity": "LOW",
          "replacement": "Use Firebase Auth user properties"
        },
        {
          "line": 225,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 258,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/projectSelectionService.ts",
      "issues": [
        {
          "line": 248,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 668,
          "content": "const jwtToken = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 803,
          "content": "return jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 6,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 6,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 248,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 668,
          "content": "const jwtToken = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 803,
          "content": "return jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 640,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 788,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 839,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 248,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 640,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 644,
          "content": "const activeToken = teamMemberToken || authToken || jwtToken;",
          "match": "Token = teamMemberToken || authToken || jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 668,
          "content": "const jwtToken = jwtService.getToken();",
          "match": "Token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 788,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 839,
          "content": "const jwtToken = localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 861,
          "content": "const jwtServiceToken = (window as any).jwtService?.getToken?.();",
          "match": "Token = (window as any).jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/reportsService.ts",
      "issues": [
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/reviewApi.ts",
      "issues": [
        {
          "line": 131,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/reviewRejectionAutomation.ts",
      "issues": [
        {
          "line": 78,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/reviewResetAutomation.ts",
      "issues": [
        {
          "line": 91,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/savedProjectPathsService.ts",
      "issues": [
        {
          "line": 263,
          "content": "localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 266,
          "content": "sessionStorage.getItem('jwt_token')",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/schedulerService.ts",
      "issues": [
        {
          "line": 95,
          "content": "return jwtService.isAuthenticated();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "import jwtService from '@/services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import jwtService from '@/services/jwtService';",
          "match": "from '@/services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/serviceInitializer.ts",
      "issues": [
        {
          "line": 56,
          "content": "const isJwtReady = typeof jwtService.getToken === 'function';",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionCommentsApi.ts",
      "issues": [
        {
          "line": 14,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 14,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 14,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionDataApi.ts",
      "issues": [
        {
          "line": 16,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 12,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 12,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 16,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 16,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionLifecycleAutomation.ts",
      "issues": [
        {
          "line": 5,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 5,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 211,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionManager.ts",
      "issues": [
        {
          "line": 296,
          "content": "const token = jwtService.getToken() ||",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 295,
          "content": "const { jwtService } = await import('./jwtService');",
          "match": "import('./jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 296,
          "content": "const token = jwtService.getToken() ||",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 299,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 296,
          "content": "const token = jwtService.getToken() ||",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionsApi.ts",
      "issues": [
        {
          "line": 108,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 495,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 518,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 545,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 11,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 11,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 108,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 495,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 518,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 545,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 120,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 153,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 189,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 108,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 495,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 518,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 545,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionsApiErrorHandler.ts",
      "issues": [
        {
          "line": 150,
          "content": "jwtService.logout();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 3,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/sessionsService.ts",
      "issues": [
        {
          "line": 137,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 5,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 5,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 136,
          "content": "// Try to get token from jwtService",
          "match": "from jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 137,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 137,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/slackService.ts",
      "issues": [
        {
          "line": 110,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/smartAlertConfigService.ts",
      "issues": [
        {
          "line": 169,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 244,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 337,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 392,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1,
          "content": "import { jwtService, getUserIdFromToken } from './jwtService';",
          "match": "import { jwtService, getUserIdFromToken } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 1,
          "content": "import { jwtService, getUserIdFromToken } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 169,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 244,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 337,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 392,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 169,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 244,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 337,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 392,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/smartNotificationEngine.ts",
      "issues": [
        {
          "line": 213,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 460,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 572,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 585,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 608,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 213,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 460,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 572,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 585,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 608,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 213,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 460,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 572,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 585,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 608,
          "content": "'Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt_token')}`",
          "match": "Authorization': `Bearer ${localStorage.getItem('token') || localStorage.getItem('authToken') || localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/standardizedApiService.ts",
      "issues": [
        {
          "line": 32,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 9,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 32,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 32,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/timecardApi.ts",
      "issues": [
        {
          "line": 60,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 148,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 612,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 671,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 8,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 8,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 60,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 148,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 612,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 671,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 60,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 148,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 612,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 671,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/timecardApprovalApi.ts",
      "issues": [
        {
          "line": 44,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 8,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 8,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 44,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 44,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/timecardAutoOpenService.test.ts",
      "issues": [
        {
          "line": 33,
          "content": "const token = localStorage.getItem('jwt_token') || localStorage.getItem('auth_token') || localStorage.getItem('token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 33,
          "content": "const token = localStorage.getItem('jwt_token') || localStorage.getItem('auth_token') || localStorage.getItem('token');",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/timecardAutoOpenService.ts",
      "issues": [
        {
          "line": 48,
          "content": "let token = localStorage.getItem('auth_token') || localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 48,
          "content": "let token = localStorage.getItem('auth_token') || localStorage.getItem('jwt_token');",
          "match": "token = localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/unifiedSessionWorkflowApi.ts",
      "issues": [
        {
          "line": 215,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 2,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 215,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 215,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/unifiedWorkflowApi.ts",
      "issues": [
        {
          "line": 34,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 10,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 10,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 34,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 34,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/unifiedWorkflowDataService.ts",
      "issues": [
        {
          "line": 737,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 15,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 15,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 737,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 737,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/userService.ts",
      "issues": [
        {
          "line": 23,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 48,
          "content": "const newToken = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 114,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/webOnlyDataRouter.ts",
      "issues": [
        {
          "line": 238,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/webSocketManager.ts",
      "issues": [
        {
          "line": 55,
          "content": "localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/websocket/WebSocketHealthMonitor.ts",
      "issues": [
        {
          "line": 114,
          "content": "if (!authService.getToken()) {",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 275,
          "content": "if (!webSocketService.isConnected(connectionId) && authService.getToken()) {",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/websocket/WebSocketService.ts",
      "issues": [
        {
          "line": 448,
          "content": "const token = config.authToken || authService.getToken() || (isDev ? 'test-user' : '');",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 574,
          "content": "const token = config.authToken || authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 728,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/websocket/WebSocketTestSuite.ts",
      "issues": [
        {
          "line": 331,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 355,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/workflowProductionBridge.ts",
      "issues": [
        {
          "line": 183,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 15,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 15,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 183,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 183,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/workflowReviewIntegrationService.ts",
      "issues": [
        {
          "line": 302,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 339,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 469,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 571,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 628,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 964,
          "content": "headers: { 'Authorization': `Bearer ${jwtService.getToken()}` }",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 18,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 18,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 302,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 339,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 469,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 571,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 628,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 964,
          "content": "headers: { 'Authorization': `Bearer ${jwtService.getToken()}` }",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 302,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 339,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 469,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 571,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 628,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 964,
          "content": "headers: { 'Authorization': `Bearer ${jwtService.getToken()}` }",
          "match": "Bearer ${jwtService.getToken()}` }",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 302,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 339,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 469,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 571,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 628,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 964,
          "content": "headers: { 'Authorization': `Bearer ${jwtService.getToken()}` }",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/workflowStepProgressionService.ts",
      "issues": [
        {
          "line": 236,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 647,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 724,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 800,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 847,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 894,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 919,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1029,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 1057,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 20,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 20,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 236,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 647,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 724,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 800,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 847,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 894,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 919,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1029,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1057,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 236,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Bearer ${jwtService.getToken()}",
          "description": "Bearer token with JWT variable",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 236,
          "content": "'Authorization': `Bearer ${jwtService.getToken()}`",
          "match": "Authorization': `Bearer ${jwt",
          "description": "Authorization header with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Use Firebase ID token in Authorization header"
        },
        {
          "line": 647,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 724,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 800,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 847,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 894,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 919,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1029,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 1057,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/services/workflowTaskSyncApi.ts",
      "issues": [
        {
          "line": 160,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 6,
          "content": "import { jwtService } from './jwtService';",
          "match": "import { jwtService } from './jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 6,
          "content": "import { jwtService } from './jwtService';",
          "match": "from './jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 160,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 160,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/shared/hooks/useWebSocket.js",
      "issues": [
        {
          "line": 16,
          "content": "const token = AuthService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/api.ts",
      "issues": [
        {
          "line": 76,
          "content": "token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 4,
          "content": "import { jwtService } from '../services/jwtService';",
          "match": "import { jwtService } from '../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 4,
          "content": "import { jwtService } from '../services/jwtService';",
          "match": "from '../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 76,
          "content": "token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 65,
          "content": "localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 89,
          "content": "() => localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 92,
          "content": "() => sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 78,
          "content": "console.log('🔑 [getAuthHeaders] Using JWT service token');",
          "match": "getAuthHeaders] Using JWT",
          "description": "Auth headers with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Update to use Firebase ID token"
        },
        {
          "line": 81,
          "content": "console.warn('🔑 [getAuthHeaders] JWT service error:', jwtError);",
          "match": "getAuthHeaders] JWT service error:', jwt",
          "description": "Auth headers with JWT reference",
          "severity": "MEDIUM",
          "replacement": "Update to use Firebase ID token"
        },
        {
          "line": 76,
          "content": "token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/authFlowTester.ts",
      "issues": [
        {
          "line": 100,
          "content": "const tokenKeys = ['team_member_token', 'auth_token', 'jwt_token', 'token', 'active_project_token'];",
          "match": "tokenKeys = ['team_member_token', 'auth_token', 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 451,
          "content": "const tokenKeys = ['team_member_token', 'auth_token', 'jwt_token', 'token'];",
          "match": "tokenKeys = ['team_member_token', 'auth_token', 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/globalCors.ts",
      "issues": [
        {
          "line": 48,
          "content": "const token = jwtService.getToken();",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 10,
          "content": "import { jwtService } from '../services/jwtService';",
          "match": "import { jwtService } from '../services/jwtService",
          "description": "jwtService imports",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 10,
          "content": "import { jwtService } from '../services/jwtService';",
          "match": "from '../services/jwtService",
          "description": "jwtService imports (from syntax)",
          "severity": "HIGH",
          "replacement": "Import unifiedFirebaseAuth instead"
        },
        {
          "line": 48,
          "content": "const token = jwtService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 48,
          "content": "const token = jwtService.getToken();",
          "match": "token = jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/loginFlowDebugger.ts",
      "issues": [
        {
          "line": 120,
          "content": "this.state.jwtService.setToken(testToken);",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 203,
          "content": "this.state.jwtService.setToken(iterationToken);",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 120,
          "content": "this.state.jwtService.setToken(testToken);",
          "match": ".setToken(",
          "description": "setToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles tokens automatically"
        },
        {
          "line": 203,
          "content": "this.state.jwtService.setToken(iterationToken);",
          "match": ".setToken(",
          "description": "setToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Firebase Auth handles tokens automatically"
        },
        {
          "line": 51,
          "content": "localStorage_jwt: localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 126,
          "content": "jwt_token: localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 54,
          "content": "sessionStorage_jwt: sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 131,
          "content": "jwt_token: sessionStorage.getItem('jwt_token'),",
          "match": "sessionStorage.getItem('jwt_token')",
          "description": "Direct sessionStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 109,
          "content": "const tokenKeys = ['jwt_token', 'auth_token', 'token'];",
          "match": "tokenKeys = ['jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 261,
          "content": "const tokenKeys = ['jwt_token', 'auth_token', 'token'];",
          "match": "tokenKeys = ['jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/quickAuthTest.ts",
      "issues": [
        {
          "line": 212,
          "content": "jwt_token: localStorage.getItem('jwt_token'),",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 32,
          "content": "const tokenKeys = ['team_member_token', 'auth_token', 'jwt_token', 'token'];",
          "match": "tokenKeys = ['team_member_token', 'auth_token', 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 121,
          "content": "const tokenKeys = ['team_member_token', 'auth_token', 'jwt_token', 'token', 'active_project_token'];",
          "match": "tokenKeys = ['team_member_token', 'auth_token', 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 193,
          "content": "const tokenKeys = ['team_member_token', 'auth_token', 'jwt_token', 'token', 'active_project_token'];",
          "match": "tokenKeys = ['team_member_token', 'auth_token', 'jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/systemCheck.ts",
      "issues": [
        {
          "line": 45,
          "content": "const authToken = localStorage.getItem('auth_token') || localStorage.getItem('jwt_token');",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 45,
          "content": "const authToken = localStorage.getItem('auth_token') || localStorage.getItem('jwt_token');",
          "match": "Token = localStorage.getItem('auth_token') || localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/webOnlyOptimizations.ts",
      "issues": [
        {
          "line": 85,
          "content": "(window as any).jwtService.getToken = function() {",
          "match": "jwtService.",
          "description": "Direct jwtService usage",
          "severity": "HIGH",
          "replacement": "Use unifiedFirebaseAuth or authService wrapper"
        },
        {
          "line": 80,
          "content": "const originalGetToken = (window as any).jwtService?.getToken;",
          "match": "Token = (window as any).jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/websocketDiagnostic.ts",
      "issues": [
        {
          "line": 91,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "localStorage.getItem('jwt_token')",
          "description": "Direct localStorage JWT token access",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 91,
          "content": "const token = localStorage.getItem('jwt_token') ||",
          "match": "token = localStorage.getItem('jwt",
          "description": "Token assignment from JWT",
          "severity": "MEDIUM",
          "replacement": "Use unifiedFirebaseAuth.getIdToken()"
        }
      ]
    },
    {
      "file": "/Users/chebrooks/Documents/IDE_Project/BACKBONE 14_2 & Website 2 full project files/Dashboard-v14_2/apps/web/src/utils/websocketEnvironmentTest.ts",
      "issues": [
        {
          "line": 203,
          "content": "const token = authService.getToken();",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        },
        {
          "line": 245,
          "content": "authToken: authService.getToken() || undefined",
          "match": ".getToken()",
          "description": "getToken() method calls",
          "severity": "MEDIUM",
          "replacement": "Use await authService.getToken() or unifiedFirebaseAuth.getIdToken()"
        }
      ]
    }
  ],
  "recommendations": [
    {
      "priority": 1,
      "title": "Replace Direct jwtService Usage",
      "description": "Found 271 high-priority issues with direct jwtService usage",
      "action": "Replace with unifiedFirebaseAuth or authService wrapper"
    },
    {
      "priority": 2,
      "title": "Update Token Method Calls",
      "description": "Found 473 medium-priority token method calls",
      "action": "Update to use async Firebase Auth methods"
    },
    {
      "priority": 3,
      "title": "Clean Up Legacy Patterns",
      "description": "Found 11 low-priority legacy patterns",
      "action": "Remove or update when convenient"
    }
  ],
  "severityCounts": {
    "HIGH": 271,
    "MEDIUM": 473,
    "LOW": 11
  },
  "patternCounts": {
    "Direct localStorage JWT token access": 102,
    "Direct localStorage JWT token setting": 13,
    "Token assignment from JWT": 133,
    "Direct sessionStorage JWT token access": 13,
    "Direct jwtService usage": 130,
    "jwtService imports": 71,
    "jwtService imports (from syntax)": 70,
    "getToken() method calls": 143,
    "Direct localStorage JWT token removal": 7,
    "Bearer token with JWT variable": 27,
    "Authorization header with JWT reference": 27,
    "clearToken() method calls": 7,
    "Manual JWT token parsing": 4,
    "setToken() method calls": 6,
    "Auth headers with JWT reference": 2
  }
}